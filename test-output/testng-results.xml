<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-06T22:42:19 IST" name="MyTestSuite" finished-at="2025-01-06T22:42:44 IST" duration-ms="24521">
    <groups>
      <group name="Regression">
        <method signature="ErrorValidations.loginErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidations@6e4566f1]" name="loginErrorValidation" class="rahulshettyacademy.Tests.ErrorValidations"/>
      </group> <!-- Regression -->
      <group name="primary">
        <method signature="SubmitOrder.submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" name="submitOrder" class="rahulshettyacademy.Tests.SubmitOrder"/>
      </group> <!-- primary -->
    </groups>
    <test started-at="2025-01-06T22:42:19 IST" name="Error Validations Test" finished-at="2025-01-06T22:42:28 IST" duration-ms="9272">
      <class name="rahulshettyacademy.Tests.ErrorValidations">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidations@6e4566f1]" started-at="2025-01-06T22:42:19 IST" name="launchApplication" finished-at="2025-01-06T22:42:27 IST" duration-ms="7923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidations@6e4566f1]" started-at="2025-01-06T22:42:27 IST" name="loginErrorValidation" finished-at="2025-01-06T22:42:28 IST" duration-ms="736" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email or password..]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email or password..]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at rahulshettyacademy.Tests.ErrorValidations.loginErrorValidation(ErrorValidations.java:20)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidations@6e4566f1]" started-at="2025-01-06T22:42:28 IST" name="tearDown" finished-at="2025-01-06T22:42:28 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.ErrorValidations -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-01-06T22:42:19 IST" name="Submit Order Test" finished-at="2025-01-06T22:42:44 IST" duration-ms="24521">
      <class name="rahulshettyacademy.Tests.SubmitOrder">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:19 IST" name="launchApplication" finished-at="2025-01-06T22:42:27 IST" duration-ms="7470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:27 IST" name="submitOrder" data-provider="getData" finished-at="2025-01-06T22:42:31 IST" duration-ms="4638" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Pass@123, product=QWERTY, email=rajimuthu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:31 IST" name="tearDown" finished-at="2025-01-06T22:42:32 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:32 IST" name="launchApplication" finished-at="2025-01-06T22:42:39 IST" duration-ms="7611" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:39 IST" name="submitOrder" data-provider="getData" finished-at="2025-01-06T22:42:43 IST" duration-ms="4054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Pass@123, product=Banarsi Saree, email=rajimuthu@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrder@484094a5]" started-at="2025-01-06T22:42:43 IST" name="tearDown" finished-at="2025-01-06T22:42:44 IST" duration-ms="225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.SubmitOrder -->
    </test> <!-- Submit Order Test -->
  </suite> <!-- MyTestSuite -->
</testng-results>
